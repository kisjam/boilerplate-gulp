/*
/* Mixin
/*
----------------------------------------------------------------- */
@mixin hover-opacity($opacity:0.8) {
  transition: opacity 0.4s ease;
  &:hover {
    opacity: $opacity;
  }
}

@mixin mq($point, $min:false) {
	@if( type-of($point) == list ){
		$bp1:'';
		$bp2:'';
		@if( map-get($breakpoints, nth($point,1)) ){
			$bp1: map-get($breakpoints, nth($point,1))+1;
		} @else {
			$bp1: nth($point,1);
		}
		@if( map-get($breakpoints, nth($point,2)) ){
			$bp2: map-get($breakpoints, nth($point,2));
		} @else {
			$bp2: nth($point,2);
		}
		@media screen and (min-width: $bp1) and (max-width: $bp2) { @content; }
	} @else if ($min) {
		@if( map-get($breakpoints, $point) ) {
			@media screen and (min-width: map-get($breakpoints, $point)+1) { @content; }
		} @else {
			@media screen and (min-width: $point) { @content; }
		}
	} @else {
		@if( map-get($breakpoints, $point) ){
			@media screen and (max-width: map-get($breakpoints, $point)) { @content; }
		} @else {
			@media screen and (max-width: $point) { @content; }
		}
	}
}
